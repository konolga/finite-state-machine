{"version":3,"sources":["lib/FiniteStateMachine/FiniteStateMachine.js","user/User.js","App.js","reportWebVitals.js","index.js"],"names":["states","loading","success","error","results","fetchStates","Machine","args","useState","currentState","updateState","doFetch","a","fetch","res","json","useEffect","User","className","type","color","height","width","map","result","index","data","UserDetails","first_name","last_name","email","gender","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAGMA,EAAS,CACbC,SAAS,EACTC,SAAS,EACTC,OAAO,EACPC,QAAS,MAGLC,EAAc,CAClBJ,QAAQ,2BAAMD,GAAP,IAAeC,SAAS,IAC/BC,QAAQ,2BAAMF,GAAP,IAAeE,SAAS,IAC/BC,MAAM,2BAAMH,GAAP,IAAeG,OAAO,KAwBdG,EArBC,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,sBACSC,mBAASH,EAAYJ,SAD9B,mBACpBQ,EADoB,KACNC,EADM,KAErBC,EAAO,uCAAG,8BAAAC,EAAA,+EAEMC,MAAK,WAAL,EAASN,GAFf,YAENO,EAFM,wCAIYA,EAAIC,OAJhB,OAIJX,EAJI,OAKVM,EAAY,2BAAKL,EAAYH,SAAlB,IAA2BE,aAL5B,yDAQZM,EAAYL,EAAYF,OARZ,0DAAH,qDAgBb,OAJAa,qBAAU,WACRL,MACC,IAEIF,G,OCzBIQ,EAAO,WAAO,IAAD,EAHjBX,EAAQ,+BAIPL,EADgB,EAChBA,QAASE,EADO,EACPA,MAAOC,EADA,EACAA,QACxB,OAAOH,EACL,cAAC,IAAD,CACEiB,UAAU,SACVC,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,KAENnB,GAAoB,MAAXC,EAGZ,qBAAIc,UAAU,QAAd,cAAwB,iBAAxB,OAFAd,EAAQmB,KAAI,SAACC,EAAQC,GAAT,OAAmB,cAAC,EAAD,CAAaC,KAAMF,GAAaC,OAMtDE,EAAc,SAAC,GAErB,IAAD,IADJD,KAAQE,EACJ,EADIA,WAAYC,EAChB,EADgBA,UAAWC,EAC3B,EAD2BA,MAAOC,EAClC,EADkCA,OAEtC,OACE,sBAAKb,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACGU,EADH,IACgBC,KAEhB,qBAAKX,UAAU,YAAf,SAA4BY,IAC5B,qBAAKZ,UAAU,aAAf,SAA6Ba,Q,MCpBpBC,MAXf,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,sCACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,UCGOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63a12a4f.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst states = {\r\n  loading: false,\r\n  success: false,\r\n  error: false,\r\n  results: null,\r\n};\r\n\r\nconst fetchStates = {\r\n  loading: { ...states, loading: true },\r\n  success: { ...states, success: true },\r\n  error: { ...states, error: true },\r\n};\r\n\r\nconst Machine = (...args) => {\r\n  const [currentState, updateState] = useState(fetchStates.loading);\r\n  const doFetch = async () => {\r\n    try {\r\n      const res = await fetch(...args);\r\n      if (res) {\r\n        const results = await res.json();\r\n        updateState({ ...fetchStates.success, results });\r\n      }\r\n    } catch (error) {\r\n      updateState(fetchStates.error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    doFetch();\r\n  }, []);\r\n\r\n  return currentState;\r\n};\r\n\r\nexport default Machine;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./User.scss\";\r\nimport Machine from \"../lib/FiniteStateMachine/FiniteStateMachine\";\r\n\r\nconst getData = () => {\r\n  return Machine(\"http://localhost:3000/users\");\r\n};\r\n\r\nexport const User = () => {\r\n  const { loading, error, results } = getData();\r\n  return loading ? (\r\n    <Loader\r\n      className=\"loader\"\r\n      type=\"Circles\"\r\n      color=\"#8bacbd\"\r\n      height={80}\r\n      width={80}\r\n    ></Loader>\r\n  ) : !error && results != null ? (\r\n    results.map((result, index) => <UserDetails data={result} key={index} />)\r\n  ) : (\r\n    <h3 className=\"error\"> {\"User not found\"} </h3>\r\n  );\r\n};\r\n\r\nexport const UserDetails = ({\r\n  data: { first_name, last_name, email, gender },\r\n}) => {\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"row title\">\r\n        {first_name} {last_name}\r\n      </div>\r\n      <div className=\"row email\">{email}</div>\r\n      <div className=\"row gender\">{gender}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { User } from \"./user/User\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">Finite state machine App</header>\r\n      <div className=\"details-container\">\r\n        <User></User>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}